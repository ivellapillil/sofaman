#
# Sample sofa model that exercises all the supported elements.
#

import "simple_all.sofa"
import style "default.css"

# --------

diagrams:
    - Overview
    - "CRM Ecosystem"
    - "Technical Architecture":
        type: component

# --------

stereotype Regulatory: [GDPR]
stereotype Security: [PIDRelevant]

# --------

actor Client
actor RelationshipManager

# --------

component RESTService:
    ports: [443]

component CustomerDB:
    name: Customer Database
    description:|
        Holds customer data
    stereotypes: [Regulatory.GDPR]
    ports: [443, SOAP, REST1]
    diagrams:
        Overview: 
            style: dark

component CustomerSearch(RESTService)

relation CustomerSearch@443 ..> CustomerDB@REST1:
    name: Execute search query
    description: |
        Search for customers by name or address
    stereotypes: [Regulatory.GDPR]
    protocol: HTTPS
    diagrams: [Overview, "CRM Ecosystem"]
    payload: CustomerName, CustomerAddress
    "Sync/Async": sync

# --------

primitives: [String, Boolean]

# --------

class Person:
    stereotypes: [Security.PIDRelevant]
    documentation: |
        Represents a person, who could be either a customer or a relationship manager
    literals:
        - CUSTOMER
        - LEAD
    attributes:
        name: 
            cardinality: 1
            type: String
            visibility: public
    operations:
        fullName:
            visibility: public
            parameters:
                firstName:
                    type: String
                lastName:
                    type: String
                fullName:
                    type: String
                    direction: return
        address:
            parameters: [street, city, country]

# --------

interface Product:
    attributes:
        name: 
            cardinality: 1
            type: String
        is_active:
            cardinality: 0..1
            type: Boolean

# --------

class Account
relation Account ..|> Product

class CurrentAccount
relation CurrentAccount --|> Account

class SavingsAccount
relation SavingsAccount --|> Account

relation Person <>-> Product:
    source:
        cardinality: 0..1
    target:
        cardinality: 1..*

class PowerOfAttorney
Person *--> PowerOfAttorney
PowerOfAttorney --> Person

class PaymentChannel
Account <--> PaymentChannel

# -----

domain CRM:
    name: "Client Relationship Management"
    capabilities:
        - CDM
        - Customer Notes
        - Case Management

# -----

capability CDM:
    name: Client Data Management